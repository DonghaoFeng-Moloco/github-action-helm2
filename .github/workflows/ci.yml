name: Continuous Integration
on:
  push:
    branches:
      - master
  pull_request:
jobs:
  generate-ref:
    name: Generate Ref
    runs-on: ubuntu-latest
    outputs:
      REF: ${{ steps.generate-ref.outputs.ref }}
    steps:
      - run: helm version
      - uses: actions/checkout@v1
      - run: helm version
      - id: generate-ref
        name: Generate Ref
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ] ; then
            ref=$(php -r "echo str_replace('/', '-SLASH-', '${{ github.event.pull_request.head.ref }}');")
            echo "$ref"
            printf "::set-output name=ref::%s" $ref
            exit 0
          fi
          echo "${GITHUB_REF##*/}"
          echo "::set-output name=ref::${GITHUB_REF##*/}"
  tests-helm-works:
    name: "Testing Helm Command: ${{ matrix.exec }}"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        exec:
          - "helm version"
          - "helm repo add WyriHaximusNet https://helm.wyrihaximus.net/"
          - "helm repo add WyriHaximusNet https://helm.wyrihaximus.net/ && helm repo list"
          - "helm plugin install https://github.com/hypnoglow/helm-s3.git"
          - "helm plugin install https://github.com/hypnoglow/helm-s3.git && helm plugin list"
          - "helm env"
    steps:
      - uses: actions/checkout@v1
      - uses: ./
        with:
          exec: ${{ matrix.exec }}
          kubeconfig: tada
  tests-helm-output:
    name: "Testing Helm Output"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - run: helm version
      - uses: ./
        id: helm3
        with:
          exec: helm repo add WyriHaximusNet https://helm.wyrihaximus.net/ && helm repo list
          kubeconfig: tada
      - run: |
          php -r "exit(strpos('${HELM_OUTPUT}', 'WyriHaximusNet') !== false ? 0 : 255);"
        env:
          HELM_OUTPUT: ${{ steps.helm3.outputs.helm_output }}
      - run: |
          php -r "exit(strpos('${HELM_OUTPUT}', 'has been added to your repositories') !== false ? 0 : 255);"
        env:
          HELM_OUTPUT: ${{ steps.helm3.outputs.helm_output }}
      - run: |
          php -r "exit(strpos('${HELM_OUTPUT}', 'https://helm.wyrihaximus.net/') !== false ? 0 : 255);"
        env:
          HELM_OUTPUT: ${{ steps.helm3.outputs.helm_output }}
  tests-helm-install-input:
    name: "Testing Helm Install (input)"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.2.0
      - name: Get running image ID
        id: ps
        run: printf "::set-output name=id::%s" $(docker ps --format "{{.ID}}")
        env:
          IMAGE: ${{ steps.build.outputs.tag }}
      - name: Get running image IP
        id: inspect
        run: printf "::set-output name=ip::%s" $(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' ${IMAGE_ID})
        env:
          IMAGE_ID: ${{ steps.ps.outputs.id }}
      - run: sed -i "s/127.0.0.1:32768/${KIND_IP}:6443/g" ~/.kube/config
        env:
          KIND_IP: ${{ steps.inspect.outputs.ip }}
      - name: Make kubeconfig available to Helm3 action
        run: |
          kubeconfig=$(cat ~/.kube/config)
          kubeconfig="${kubeconfig//'%'/'%25'}"
          kubeconfig="${kubeconfig//$'\n'/'%0A'}"
          kubeconfig="${kubeconfig//$'\r'/'%0D'}"
          echo "::set-output name=kubeconfig::$kubeconfig"
        id: kubeconfig
      - name: List installed packages
        uses: ./
        id: helmlistcountfirst
        with:
          exec: |
            printf "::set-output name=count::%s" $(helm list | grep ducker-hub-exporter | wc -l)
          kubeconfig: ${{ steps.kubeconfig.outputs.kubeconfig }}
      - run: |
          php -r "exit(trim('${COUNT}') === '0' ? 0 : 255);"
        env:
          COUNT: ${{ steps.helmlistcountfirst.outputs.count }}
      - name: Install ducker-hub-exporter
        uses: ./
        id: helm3
        with:
          exec: |
            helm repo add WyriHaximusNet https://helm.wyrihaximus.net/
            helm install ducker-hub-exporter WyriHaximusNet/docker-hub-exporter --atomic
          kubeconfig: ${{ steps.kubeconfig.outputs.kubeconfig }}
      - name: List installed packages
        uses: ./
        with:
          exec: |
            helm list
          kubeconfig: ${{ steps.kubeconfig.outputs.kubeconfig }}
      - name: List installed packages
        uses: ./
        id: helmlistcountseccond
        with:
          exec: |
            helm list
            printf "::set-output name=count::%s" $(helm list | grep ducker-hub-exporter | wc -l)
          kubeconfig: ${{ steps.kubeconfig.outputs.kubeconfig }}
      - run: |
          php -r "exit(trim('${COUNT}') === '1' ? 0 : 255);"
        env:
          COUNT: ${{ steps.helmlistcountseccond.outputs.count }}
      - name: UnInstall ducker-hub-exporter
        uses: ./
        with:
          exec: |
            helm uninstall ducker-hub-exporter
          kubeconfig: ${{ steps.kubeconfig.outputs.kubeconfig }}
      - name: List installed packages
        uses: ./
        id: helmlistcountthird
        with:
          exec: |
            helm list
            printf "::set-output name=count::%s" $(helm list | grep ducker-hub-exporter | wc -l)
          kubeconfig: ${{ steps.kubeconfig.outputs.kubeconfig }}
      - run: |
          php -r "exit(trim('${COUNT}') === '0' ? 0 : 255);"
        env:
          COUNT: ${{ steps.helmlistcountthird.outputs.count }}
  tests-helm-install-file:
    name: "Testing Helm Install (file)"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.2.0
      - name: Get running image ID
        id: ps
        run: printf "::set-output name=id::%s" $(docker ps --format "{{.ID}}")
        env:
          IMAGE: ${{ steps.build.outputs.tag }}
      - name: Get running image IP
        id: inspect
        run: printf "::set-output name=ip::%s" $(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' ${IMAGE_ID})
        env:
          IMAGE_ID: ${{ steps.ps.outputs.id }}
      - run: sed -i "s/127.0.0.1:32768/${KIND_IP}:6443/g" ~/.kube/config
        env:
          KIND_IP: ${{ steps.inspect.outputs.ip }}
      - name: List installed packages
        uses: ./
        id: helmlistcountfirst
        with:
          exec: |
            helm list | grep ducker-hub-exporter | wc -l
      - run: |
          php -r "exit(trim('${COUNT}') === '0' ? 0 : 255);"
        env:
          COUNT: ${{ steps.helmlistcountfirst.outputs.helm_output }}
      - name: Install ducker-hub-exporter
        uses: ./
        id: helm3
        with:
          exec: |
            helm repo add WyriHaximusNet https://helm.wyrihaximus.net/
            helm install ducker-hub-exporter WyriHaximusNet/docker-hub-exporter --atomic
      - name: List installed packages
        uses: ./
        with:
          exec: |
            helm list
      - name: List installed packages
        uses: ./
        id: helmlistcountseccond
        with:
          exec: |
            helm list | grep ducker-hub-exporter | wc -l
      - run: |
          php -r "exit(trim('${COUNT}') === '1' ? 0 : 255);"
        env:
          COUNT: ${{ steps.helmlistcountseccond.outputs.helm_output }}
      - name: UnInstall ducker-hub-exporter
        uses: ./
        with:
          exec: |
            helm uninstall ducker-hub-exporter
      - name: List installed packages
        uses: ./
        id: helmlistcountthird
        with:
          exec: |
            helm list | grep ducker-hub-exporter | wc -l
      - run: |
          php -r "exit(trim('${COUNT}') === '0' ? 0 : 255);"
        env:
          COUNT: ${{ steps.helmlistcountthird.outputs.helm_output }}
